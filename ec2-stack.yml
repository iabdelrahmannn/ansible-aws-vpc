- name: stack setup
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Import vpc setup variables
      include_vars: vars/output_vars

    - name: Import ec2 setup variables
      include_vars: vars/stacksetup

    - name: create a new EC2 key pair
      amazon.aws.ec2_key:
        name: vpro-key
        region: "{{region}}"
      register: vprokey_out

    - name: save private key into file loginkey_vpro.pem
      copy:
         content: "{{vprokey_out.key.private_key}}"
         dest: "./loginkey_vpro.pem"
         mode: 0600
      when: vprokey_out.changed

    - name: create SG for LB
      amazon.aws.ec2_security_group:
         name: SG_ELB
         region: "{{region}}"
         description: allow port 80 form everywhere
         vpc_id: "{{vpcid}}"
         rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
      register: SGELB_out   
   
    - name: create SG for ec2
      amazon.aws.ec2_security_group:
         name: SG_EC2
         region: "{{region}}"
         description: allow port 22 form everywhere
         vpc_id: "{{vpcid}}"
         purge_rules: no
         rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{SGELB_out.group_id}}"
            rule_desc: allow all on port 80

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastionsg_out}}"
      register: SGEC2_out   
      
    - name: update SG with its own sg id
      amazon.aws.ec2_security_group:
        name: SG_EC2
        region: "{{region}}"
        description: allow port 22 form everywhere
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
         - proto: all
           group_id: "{{SGEC2_out.group_id}}"


    - name: create nginix web01
      amazon.aws.ec2_instance:
        name: "web-01-nginix"
        key_name: vpro-key
        instance_type: t2.micro
        region: "{{region}}"
        vpc_subnet_id: "{{privsub4id}}"
        exact_count: 1
        count_tag:
          name: web-01-nginix
          project: vprofile
          owner: devops team 
        group_id: "{{SGEC2_out.group_id}}"
        wait: yes
        wait_timeout: 300
        image_id: "{{nginx_ami}}"
        tags:
          name: web-01-nginix
          project: vprofile
          owner: devops team           
      register: web01_out

    - name: create tomcat app01
      amazon.aws.ec2_instance:
        name: "app-01-tomcat"
        key_name: vpro-key
        instance_type: t2.micro
        region: "{{region}}"
        vpc_subnet_id: "{{privsub4id}}"
        exact_count: 1
        count_tag:
          name: app-01-tomcat
          project: vprofile
          owner: devops team 
        group_id: "{{SGEC2_out.group_id}}"
        wait: yes
        wait_timeout: 300
        image_id: "{{tomcat_ami}}"
        tags:
          name: app-01-tomcat
          project: vprofile
          owner: devops team           
      register: app01_out  

    - name: create memcache mc01
      amazon.aws.ec2_instance:
        name: "mc-01-memcache"
        key_name: vpro-key
        instance_type: t2.micro
        region: "{{region}}"
        vpc_subnet_id: "{{privsub4id}}"
        exact_count: 1
        count_tag:
          name: mc-01-memcache
          project: vprofile
          owner: devops team 
        group_id: "{{SGEC2_out.group_id}}"
        wait: yes
        wait_timeout: 300
        image_id: "{{memcache_ami}}"
        tags:
          name: mc-01-memcache
          project: vprofile
          owner: devops team           
      register: mc01_out    

    - name: create rabbitmq rbq01
      amazon.aws.ec2_instance:
        name: "rbq-01-rabbitmq"
        key_name: vpro-key
        instance_type: t2.micro
        region: "{{region}}"
        vpc_subnet_id: "{{privsub4id}}"
        exact_count: 1
        count_tag:
          name: rbq-01-rabbitmq
          project: vprofile
          owner: devops team 
        group_id: "{{SGEC2_out.group_id}}"
        wait: yes
        wait_timeout: 300
        image_id: "{{rmq_ami}}"
        tags:
          name: rbq-01-rabbitmq
          project: vprofile
          owner: devops team           
      register: rbq01_out  

    - name: create mysql rbq01
      amazon.aws.ec2_instance:
        name: "db-01-mysql"
        key_name: vpro-key
        instance_type: t2.micro
        region: "{{region}}"
        vpc_subnet_id: "{{privsub4id}}"
        exact_count: 1
        count_tag:
          name: db-01-mysql
          project: vprofile
          owner: devops team 
        group_id: "{{SGEC2_out.group_id}}"
        wait: yes
        wait_timeout: 300
        image_id: "{{mysql_ami}}"
        tags:
          name: db-01-mysql
          project: vprofile
          owner: devops team           
      register: db01_out  

    - debug: 
        var: db01_out   