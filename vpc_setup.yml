---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import vpc module
      ansible.builtin.include_vars:
        file: vars/vpc_setup.yml

    - name: create vpc
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: true
        dns_hostnames: true
        tenancy: default
        state: "{{ state }}"
      register: vpcout

    - debug:
        var: vpcout

    - name: Create public subnet 1 for zone 1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub1Cidr }}"
        az: "{{ zone1 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        map_public: true
        resource_tags:
          Name: "{{ vpc_name }}-pubsub-1"
      register: pubsub1_out

    - debug:
        var: pubsub1_out

    - name: Create public subnet 2 for zone 2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub2Cidr }}"
        az: "{{ zone2 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        map_public: true
        resource_tags:
          Name: "{{ vpc_name }}-pubsub-2"
      register: pubsub2_out

    - debug:
        var: pubsub2_out

    - name: Create public subnet 3 for zone 3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub3Cidr }}"
        az: "{{ zone3 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        map_public: true
        resource_tags:
          Name: "{{ vpc_name }}-pubsub-3"
      register: pubsub3_out

    - debug:
        var: pubsub3_out

    - name: Create private subnet 4 for zone 4
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub4Cidr }}"
        az: "{{ zone1 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-privsub-4"
      register: privsub4_out

    - debug:
        var: privsub4_out

    - name: Create private subnet 5 for zone 5
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub5Cidr }}"
        az: "{{ zone2 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-privsub-5"
      register: privsub5_out

    - debug:
        var: privsub5_out

    - name: Create private subnet 6 for zone 6
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub6Cidr }}"
        az: "{{ zone3 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: "{{ vpc_name }}-privsub-6"
      register: privsub6_out

    - debug:
        var: privsub6_out

    - name: Create internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ vpc_name }}-igw"
      register: igw_out

    - debug:
        var: igw_out
      when: false

    - name: Lookup igw id for this VPC
      amazon.aws.ec2_vpc_igw_info:
        region: "{{ region }}"
        filters:
          attachment.vpc-id: "{{ vpcout.vpc.id }}"
      register: igw_info

    - name: Keep IGW id
      ansible.builtin.set_fact:
        igw_id: "{{ igw_info.internet_gateways[0].internet_gateway_id }}"

    - name: Create public route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ vpc_name }}-pubrt"
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_id }}"
      register: pubrt_out

    - name: Create new nat gateway
      amazon.aws.ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: true
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: Create private route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ vpc_name }}-privrt"
        subnets:
          - "{{ privsub4_out.subnet.id }}"
          - "{{ privsub5_out.subnet.id }}"
          - "{{ privsub6_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            nat_gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: privrt_out

    - name: Print IDs
      debug:
        msg:
          - "VPC: {{ vpcout.vpc.id }}"
          - "Pub1: {{ pubsub1_out.subnet.id }}"
          - "Pub2: {{ pubsub2_out.subnet.id }}"
          - "Pub3: {{ pubsub3_out.subnet.id }}"
          - "Priv4: {{ privsub4_out.subnet.id }}"
          - "Priv5: {{ privsub5_out.subnet.id }}"
          - "Priv6: {{ privsub6_out.subnet.id }}"
          - "IGW: {{ igw_id }}"
          - "NATGW: {{ NATGW_out.nat_gateway_id }}"
          - "PrivRT: {{ privrt_out.route_table.id }}"
          - "PubRT: {{ pubrt_out.route_table.id }}"

    - name: create variables file for vpc
      copy:
        dest: vars/output_vars.yml
        content: |
          vpcid: "{{ vpcout.vpc.id }}"
          pubsub1id: "{{ pubsub1_out.subnet.id }}"
          pubsub2id: "{{ pubsub2_out.subnet.id }}"
          pubsub3id: "{{ pubsub3_out.subnet.id }}"
          privsub4id: "{{ privsub4_out.subnet.id }}"
          privsub5id: "{{ privsub5_out.subnet.id }}"
          privsub6id: "{{ privsub6_out.subnet.id }}"
          igwid: "{{ igw_id }}"
          NATGWid: "{{ NATGW_out.nat_gateway_id }}"
          privrtid: "{{ privrt_out.route_table.id }}"
          pubrtid: "{{ pubrt_out.route_table.id }}"
